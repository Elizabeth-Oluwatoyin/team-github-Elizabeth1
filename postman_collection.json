{
	"info": {
		"_postman_id": "9e009090-ed51-4b36-9c80-617eb4651173",
		"name": "APIAPPLICATIONWORK",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24753373",
		"_collection_link": "https://red-sunset-573311.postman.co/workspace/New-Team-Workspace~e14f2878-3199-4651-9581-bf5f17927123/collection/24753373-9e009090-ed51-4b36-9c80-617eb4651173?action=share&source=collection_link&creator=24753373"
	},
	"item": [
		{
			"name": "GET ALL TODO ENTRIES",
			"item": [
				{
					"name": "Get All Todo Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlteam}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrlteam}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET ALL ENTRIENS",
			"item": [
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"console.log(jsonData.collection)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlteam}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrlteam}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET ENTRY PER ID",
			"item": [
				{
					"name": "Get entry per ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"console.log(jsonData.collection)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlteam}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrlteam}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get entry by valid ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlteam}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrlteam}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get enrty by Invalid ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlteam}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrlteam}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET BOOKS",
			"item": [
				{
					"name": "Get Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"console.log(jsonData.collection)\r",
									"\r",
									"\r",
									"\r",
									"pm.environment.set(\"confirm that name Get Books\", \"Get Books\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlbook}}/books",
							"host": [
								"{{baseUrlbook}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"console.log(response[4].id);\r",
									"pm.environment.set(\"UnteamedID\", \"response[4].id\");\r",
									"\r",
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"console.log(jsonData.collection)\r",
									"\r",
									" pm.test(\"confirm that the name contain The Russian\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"The Russian\");\r",
									"    });\r",
									"\r",
									" pm.test(\"confirm that the type contain fiction\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"fiction\");\r",
									"    });\r",
									"    pm.environment.set(\"confirm that name contain The Russian\", \"The Russian\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlbook}}/books",
							"host": [
								"{{baseUrlbook}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get book valid name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"console.log(jsonData.collection)\r",
									"\r",
									"pm.test(\"confirm that the name contain Viscount Who Loved Me\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"Viscount Who Loved Me\");\r",
									"    });\r",
									"    pm.environment.set(\"confirm that name contain Viscount Who Loved Men\", \"Viscount Who Loved Me\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlbook}}/books",
							"host": [
								"{{baseUrlbook}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET AN ORDER",
			"item": [
				{
					"name": "Get an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"console.log(jsonData.collection)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlteam}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrlteam}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UPDATE  AN ORDER",
			"item": [
				{
					"name": "Update an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"console.log(jsonData.collection)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE AN ORDER",
			"item": [
				{
					"name": "Delete an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData)\r",
									"console.log(jsonData.collection)\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlteam}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrlteam}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "REGISTR API CLIENT",
			"item": [
				{
					"name": "Register API Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlteam}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrlteam}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET API STATUS",
			"item": [
				{
					"name": "Get API Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
							],
							"query": [
								{
									"key": "access_key",
									"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PLACE AN ORDER",
			"item": [
				{
					"name": "Place an order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlbook}}/books",
							"host": [
								"{{baseUrlbook}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"vconfirm that name contain Get entry per ID\", \"Get entry per ID\");\r",
							"pm.globals.set(\"variable_key\", \"variable_value\");\r",
							"pm.globals.set(\"variable_key\", \"variable_value\");\r",
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.collection)\r",
							"\r",
							"/**\r",
							" * \r",
							" *\r",
							" pm.test(\"Body is correct\", function () {\r",
							"        pm.response.to.have.body(\"response_body_string\");\r",
							"    });\r",
							"    pm.test(\"Your test name\", function () {\r",
							"        \r",
							"        pm.expect(jsonData.value).to.eql(100);\r",
							"    });\r",
							"    pm.test(\"Body matches string\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
							"    });\r",
							" */\r",
							"\r",
							"    pm.test(\"confirm that info contain schema\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(\"schema\");\r",
							"    });\r",
							"\r",
							"pm.test(\"confirm that name contain Get All Todo Entries\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Get All Todo Entries\");\r",
							"});\r",
							"\r",
							"\r",
							"    pm.test(\"confirm that name contain Get All Entries\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Get All Entries\");\r",
							"});\r",
							"\r",
							"pm.test(\"confirm that name contain Get entry per ID\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Get entry per ID\");\r",
							"});\r",
							"pm.environment.set(\"vconfirm that name contain Get entry per ID\", \"Get entry per ID\");\r",
							"\r",
							"pm.environment.set(\"confirm that name contain Get All Todo Entries\", \"Get All Todo Entries\");\r",
							"\r",
							"pm.environment.set(\"confirm that name contain Get All Entries\", \"Get All Entries\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"vconfirm that name contain Get entry per ID\", \"Get entry per ID\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrlteam}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
					"host": [
						"{{baseUrlteam}}"
					],
					"path": [
						"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
					],
					"query": [
						{
							"key": "access_key",
							"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.collection)\r",
							"\r",
							"\r",
							"pm.test(\"confirm that name contain Get All Todo Entries\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Get All Todo Entries\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"confirm that name contain Get All Todo Entries\", \"Get All Todo Entries\");\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
					],
					"query": [
						{
							"key": "access_key",
							"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
						}
					]
				}
			},
			"response": []
		}
	]
}