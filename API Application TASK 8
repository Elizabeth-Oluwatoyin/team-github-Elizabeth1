{
	"info": {
		"_postman_id": "9e009090-ed51-4b36-9c80-617eb4651173",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24753373",
		"_collection_link": "https://red-sunset-573311.postman.co/workspace/New-Team-Workspace~e14f2878-3199-4651-9581-bf5f17927123/collection/24753373-9e009090-ed51-4b36-9c80-617eb4651173?action=share&creator=24753373&source=collection_link"
	},
	"item": [
		{
			"name": "API Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"vconfirm that name contain Get entry per ID\", \"Get entry per ID\");\r",
							"pm.test(\"Status code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"console.log(jsonData.collection)\r",
							"\r",
							"\r",
							"pm.test(\"Comfirm that the collection is 10\", function () {\r",
							"        \r",
							"        pm.expect(jsonData.collection).to.eql(10);\r",
							"    });\r",
							"\r",
							"/**\r",
							" * \r",
							" *\r",
							" pm.test(\"Body is correct\", function () {\r",
							"        pm.response.to.have.body(\"response_body_string\");\r",
							"    });\r",
							"    pm.test(\"Your test name\", function () {\r",
							"        \r",
							"        pm.expect(jsonData.value).to.eql(100);\r",
							"    });\r",
							"    pm.test(\"Body matches string\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
							"    });\r",
							" */\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    pm.test(\"Body is correct\", function () {\r",
							"        pm.response.to.have.body(\"response_body_string\");\r",
							"    });\r",
							"    pm.test(\"Your test name\", function () {\r",
							"        \r",
							"        pm.expect(jsonData.value).to.eql(100);\r",
							"    });\r",
							"    pm.test(\"confirm that info contain schema\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(\"schema\");\r",
							"    });\r",
							"\r",
							"pm.test(\"confirm that name contain Get All Todo Entries\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Get All Todo Entries\");\r",
							"});\r",
							"\r",
							"    pm.test(\"confirm that name contain Get All Entries\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Get All Entries\");\r",
							"});\r",
							"\r",
							"pm.test(\"confirm that name contain Get entry per ID\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Get entry per ID\");\r",
							"});\r",
							"pm.environment.set(\"vconfirm that name contain Get entry per ID\", \"Get entry per ID\");\r",
							"\r",
							"pm.environment.set(\"confirm that name contain Get All Todo Entries\", \"Get All Todo Entries\");\r",
							"\r",
							"pm.environment.set(\"confirm that name contain Get All Entries\", \"Get All Entries\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"vconfirm that name contain Get entry per ID\", \"Get entry per ID\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0?access_key=PMAT-01H40M7GCGGGYX7EFK4BFTRHZX",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"3865219-8ed1a723-7194-4433-9aef-352e9b86d1e0"
					],
					"query": [
						{
							"key": "access_key",
							"value": "PMAT-01H40M7GCGGGYX7EFK4BFTRHZX"
						}
					]
				}
			},
			"response": []
		}
	]
}